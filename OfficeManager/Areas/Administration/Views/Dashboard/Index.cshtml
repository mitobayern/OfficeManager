@using OfficeManager.Areas.Administration.ViewModels.Dashboard
@model DashboardOutputViewModel


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js" integrity="sha256-TQq84xX6vkwR0Qs1qH5ADkP+MvH0W+9E7TdHJsoIQiM=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.css" integrity="sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZqjeF0E=" crossorigin="anonymous" />

@{
    var dataChart = new decimal[2] { Model.AvailableArea, Model.RentedArea };
    var labelsChart = new string[2] { "AvailableArea", "RentedArea" };
}
<div style="padding: 5%;">
    <h1 class="display-4 text-center mb-5">Total area: @Model.TotalArea meters<sup>2</sup></h1>
    <div class="row" style="align-content:center">
        <div class="col-12 col-md-10 ">
            <canvas id="myChart"></canvas>
        </div>
    </div>
</div>
<script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myPieChart = new Chart(ctx, {
            type: 'pie',
             data: {
                labels:@Html.Raw(Json.Serialize(@labelsChart)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(@dataChart)),
                    backgroundColor: ["rgba(200, 255, 200, 1)", "rgba(150, 0, 50, 1)"],
                    borderColor: ["rgba(255, 255, 255, 1)", "rgba(255, 255, 255, 1)"]
                }]
            },
            options: {
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        }
        );

</script>